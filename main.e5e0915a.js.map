{"version":3,"sources":["scripts/main.js"],"names":["tableHeader","document","querySelector","tableBody","tableBodyRows","querySelectorAll","sortRows","rowsList","index","sortedRowsList","sort","a","b","children","innerText","localeCompare","Number","slice","replace","addEventListener","event","columnIndex","target","cellIndex","sortedRows","append"],"mappings":";AAAA,aAkCC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAhCD,IAAMA,EAAcC,SAASC,cAAc,SACrCC,EAAYF,SAASC,cAAc,SACnCE,EAAgBD,EAAUE,iBAAiB,MASjD,SAASC,EAASC,EAAUC,GACtBC,IAAAA,EAAiBF,EAASG,KAC5B,SAACC,EAAGC,GAAMD,OAAAA,EAAEE,SAASL,GAAOM,UACzBC,cAAcH,EAAEC,SAASL,GAAOM,aAiB9BL,OAdO,IAAVD,IACFC,EAAiBF,EAASG,KACxB,SAACC,EAAGC,GAAMI,OAAAA,OAAOL,EAAEE,SAASL,GAAOM,WAC/BE,OAAOJ,EAAEC,SAASL,GAAOM,cAInB,IAAVN,IACFC,EAAiBF,EAASG,KACxB,SAACC,EAAGC,GAAMI,OAAAA,OAAOL,EAAEE,SAASL,GAAOM,UAAUG,MAAM,GAAGC,QAAQ,IAAK,KAC/DF,OAAOJ,EAAEC,SAASL,GAAOM,UAAUG,MAAM,GAAGC,QAAQ,IAAK,QAI1DT,EA3BTT,EAAYmB,iBAAiB,QAAS,SAACC,GAC/BC,IAAAA,EAAcD,EAAME,OAAOC,UAC3BC,EAAalB,EAAaF,EAAAA,GAAgBiB,GAEhDlB,EAAUsB,OAAVtB,MAAAA,EAAoBqB,EAAAA","file":"main.e5e0915a.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst tableHeader = document.querySelector('thead');\nconst tableBody = document.querySelector('tbody');\nconst tableBodyRows = tableBody.querySelectorAll('tr');\n\ntableHeader.addEventListener('click', (event) => {\n  const columnIndex = event.target.cellIndex;\n  const sortedRows = sortRows([...tableBodyRows], columnIndex);\n\n  tableBody.append(...sortedRows);\n});\n\nfunction sortRows(rowsList, index) {\n  let sortedRowsList = rowsList.sort(\n    (a, b) => a.children[index].innerText\n      .localeCompare(b.children[index].innerText)\n  );\n\n  if (index === 2) {\n    sortedRowsList = rowsList.sort(\n      (a, b) => Number(a.children[index].innerText)\n        - Number(b.children[index].innerText)\n    );\n  }\n\n  if (index === 3) {\n    sortedRowsList = rowsList.sort(\n      (a, b) => Number(a.children[index].innerText.slice(1).replace(',', ''))\n        - Number(b.children[index].innerText.slice(1).replace(',', ''))\n    );\n  }\n\n  return sortedRowsList;\n}\n"]}